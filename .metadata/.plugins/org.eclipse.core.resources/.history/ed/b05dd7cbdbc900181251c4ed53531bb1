import java.util.ArrayList;
import java.util.Arrays;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] randomArray = {5,2,9,8,1,0,7};
		insertionSort(randomArray,randomArray.length);
		System.out.println(Arrays.toString(randomArray));
		ArrayList<ArrayList<Integer>> collection =permutation(randomArray, randomArray.length);
		System.out.println(collection);
		
	}
	
	public static void insertionSort(int[] intArray,int n) {
		if(n>=2) {
		insertionSort(intArray, n-1);

			while(n>=2&&intArray[n-2]>intArray[n-1]) {
				int temp = intArray[n-2];
				intArray[n-2] = intArray[n-1];
				intArray[n-1]=temp;
				n--;
			}
		}//loop compare
			
	}
	public static ArrayList<ArrayList<Integer>> permutation(int[] intArray, int n) {
		ArrayList<ArrayList<Integer>> collection = new ArrayList<>();
		if(n==1) {
			ArrayList<Integer> oneIntegerArray = new ArrayList<>();
			oneIntegerArray.add(intArray[0]);
			collection.add(oneIntegerArray);
		}else if (n>1) {
			ArrayList<ArrayList<Integer>> previousArray= permutation(intArray, n-1);
			
			for (ArrayList<Integer> onePreviouseArray : previousArray) {
				for(int i =0;i<=n;i++) {
					ArrayList<Integer> temp =onePreviouseArray;
					temp.add(i, intArray[n-1]);
					collection.add(temp);
				}
			}

		}
		
		return collection;
		
	}

}
